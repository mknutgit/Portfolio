<?php

global $letters;
$letters = range("a","z");

// foreach($letters as $letter) {
//     echo $letter;
// }

// $key = 3;
// $key_negative = -$key;
// echo $key_negative;

function shift_cipher_menu() {
    $items['shift_cipher'] = array(
        'title' => 'Shift Cipher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('shift_cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['shift_cipher_result'] = array(
        'title' => 'Results',
        'page callback' => 'shift_cipher_result',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function shift_cipher_form() {
    //Container wrapping the form///
    $form['shift_cipher_container'] = array(
        '#title' => 'Shift Cipher encryption',
        '#type' => 'fieldset',
    );

    $form['shift_cipher_container']['shift_value'] = array(
        '#title' => 'Shift Value',
        '#type' => 'textfield',
        '#description' => t('Enter a value between 1 and 26'),
        '#element_validate' => array('element_validate_integer_positive', 'element_validate_shift_range'),
        '#required' => TRUE,
    );

    $form['shift_cipher_container']['direction'] = array(
        '#title' => 'Direction',
        '#type' => 'textfield',
        '#description' => t('Shift left or right?'),
        '#element_validate' => array('element_validate_direction'),
        '#required' => TRUE,
    );

    $form['shift_cipher_container']['phrase'] = array(
        '#title' => 'Phrase',
        '#type' => 'textfield',
        '#description' => t('Enter a word or phrase'),
        '#element_validate' => array('element_validate_phrase'),
        '#required' => TRUE,
    );

    $form['shift_cipher_container']['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Go!',
    );

    return $form;
}

function element_validate_shift_range($element) {
    if ($element['#value'] < 1 || $element['#value'] > 26) {
        form_error($element, t('Shift must be a number between 1 and 26'));
    }
}

function element_validate_direction($element) {
    $chosen_direction = strtolower($element['#value']);
    if ($chosen_direction != 'right' && $chosen_direction != 'left') {
        form_error($element, t("Please enter either 'right' or 'left'"));
    }
}

function element_validate_phrase($element) {
    $phrase_input = ($element['#value']);

    if (preg_match('/^[a-zA-Z,.!;:()? ]*$/', $phrase_input) == false) {
        form_error($element, t('Please only use letters or standard punctuation!'));
    }
}

function shift_cipher_form_submit($form, &$form_state) {
    $shift_value = $form_state['values']['shift_value'];
    $direction = $form_state['values']['direction'];
    //drop phrase to lower case//
    $entered_phrase = strtolower($form_state['values']['phrase']);
    $phrase_split = str_split($entered_phrase);
    global $letters;

    if($direction == 'left') {
        $shift_value = -$shift_value;
    } else {
        $shift_value = $shift_value;
    }

    $ciphered_phrase = "";

    foreach($phrase_split as $letter) {
        if(in_array($letter, $letters)) {
            $array_key = array_search($letter, $letters);
            $ciphered_letter = $array_key + $shift_value;
            //$ciphered_letter value must be 0 - 26 //
            if($ciphered_letter > 25) {
                $ciphered_letter -= 26;
            } elseif ($ciphered_letter < 0) {
                $ciphered_letter += 26;
            }
            $ciphered_phrase .= $letters[$ciphered_letter];
        } else {
            $ciphered_phrase .= $letter;
        }
        $_SESSION['phrase_encrypted'] = $ciphered_phrase;
        $form_state['redirect'] = 'shift_cipher_result';
    }
}

function shift_cipher_result() {
    $encrypted_phrase = $_SESSION['phrase_encrypted'];
    return $encrypted_phrase;
}
